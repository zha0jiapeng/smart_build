<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.QualityTemplateMapper">

    <resultMap id="BaseResultMap" type="com.ruoyi.system.entity.QualityTemplate">
        <!--@Table quality_template-->
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="templateName" column="template_name" jdbcType="VARCHAR"/>
        <result property="templateForm" column="template_form" jdbcType="VARCHAR"/>
        <result property="createUser" column="create_user" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          id, template_name, template_form, create_user, create_time, update_time
        from quality_template
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          id, template_name, template_form, create_user, create_time, update_time
        from quality_template
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="templateName != null and templateName != ''">
                and template_name = #{templateName}
            </if>
            <if test="templateForm != null and templateForm != ''">
                and template_form = #{templateForm}
            </if>
            <if test="createUser != null and createUser != ''">
                and create_user = #{createUser}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          id, template_name, template_form, create_user, create_time, update_time
        from baishiling.quality_template
    </select>
    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from quality_template
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="templateName != null and templateName != ''">
                and template_name = #{templateName}
            </if>
            <if test="templateForm != null and templateForm != ''">
                and template_form = #{templateForm}
            </if>
            <if test="createUser != null and createUser != ''">
                and create_user = #{createUser}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into quality_template(template_name, template_form, create_user)
        values (#{templateName}, #{templateForm}, #{createUser})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into quality_template(template_name, template_form, create_user)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.templateName}, #{entity.templateForm}, #{entity.createUser})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into quality_template(template_name, template_form, create_user, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.templateName}, #{entity.templateForm}, #{entity.createUser}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
        on duplicate key update
        template_name = values(template_name),
        template_form = values(template_form),
        create_user = values(create_user),
        create_time = values(create_time),
        update_time = values(update_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update quality_template
        <set>
            <if test="templateName != null and templateName != ''">
                template_name = #{templateName},
            </if>
            <if test="templateForm != null and templateForm != ''">
                template_form = #{templateForm},
            </if>
            <if test="createUser != null and createUser != ''">
                create_user = #{createUser},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from quality_template where id = #{id}
    </delete>

</mapper>

